/*
 * generated by Xtext 2.11.0
 */
package io.entitas.lang.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import io.entitas.lang.dsl.Root
import io.entitas.lang.generator.entitas_csharp.FeatureGenerationExtension

@RunWith(XtextRunner)
@InjectWith(DSLInjectorProvider)
class FeatureGenerationExtensionTest {
	@Inject
	ParseHelper<Root> parseHelper
	
	@Test
	def void featureClass() {
		Assert.assertEquals('''
			#if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)
			
			public class Feature : Entitas.VisualDebugging.Unity.DebugSystems {
			
				public Feature(string name) : base(name) {
				}
			
				public Feature() : base(true) {
					var typeName = Entitas.Utils.TypeSerializationExtension.ToCompilableString(GetType());
					var shortType = Entitas.Utils.TypeSerializationExtension.ShortTypeName(typeName);
					var readableType = Entitas.Utils.StringExtension.ToSpacedCamelCase(shortType);
			
					initialize(readableType);
				}
			}
			
			#else
			
			public class Feature : Entitas.Systems {
			
				public Feature(string name) {
				}
			
				public Feature() {
				}
			}
			
			#endif
				
			'''.toString,
			FeatureGenerationExtension.featureClass().toString)
		
		
	}
}
